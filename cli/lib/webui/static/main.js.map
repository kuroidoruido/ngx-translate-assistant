{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/form/form.module.ts","./src/app/form/form/form.component.ts","./src/app/form/form/form.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/header/header.module.ts","./src/app/store/store.module.ts","./src/app/store/translation.actions.ts","./src/app/store/translation.state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { HotkeysService } from '@ngneat/hotkeys';\nimport { Store } from '@ngxs/store';\nimport { SaveTranslationState } from './store/translation.actions';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    constructor(hotkeys: HotkeysService, store: Store) {\n        hotkeys.addShortcut({ keys: 'meta.shift.s' }).subscribe(() => {\n            store.dispatch(new SaveTranslationState());\n        });\n    }\n}\n","<app-header></app-header> <app-form></app-form>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HotkeysModule } from '@ngneat/hotkeys';\n\nimport { AppComponent } from './app.component';\nimport { HeaderModule } from './header/header.module';\nimport { FormModule } from './form/form.module';\nimport { StoreModule } from './store/store.module';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule, BrowserAnimationsModule, HotkeysModule, HeaderModule, FormModule, StoreModule],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { FormComponent } from './form/form.component';\n\n@NgModule({\n    declarations: [FormComponent],\n    imports: [CommonModule, MatExpansionModule, MatInputModule, MatTableModule],\n    exports: [FormComponent],\n})\nexport class FormModule {}\n","import { Component } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\n\nimport { ChangeTranslateKey } from 'src/app/store/translation.actions';\nimport { TranslationState, TranslationStateModel, TranslationFilesInfo } from 'src/app/store/translation.state';\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent {\n    @Select(TranslationState) translationState$: Observable<TranslationStateModel>;\n\n    constructor(private store: Store) {}\n\n    onTranslateChange(baseKey: string, key: string, file: string, newValue: string): void {\n        this.store.dispatch(new ChangeTranslateKey(baseKey, key, file, newValue));\n    }\n\n    trackedByFilesInfo(fileInfo: TranslationFilesInfo): string {\n        return fileInfo.baseKey;\n    }\n\n    trackedByKey(keyvalue: { key: string; value: string }): string {\n        return keyvalue.key;\n    }\n\n    trackedByFile(file: string): string {\n        return file;\n    }\n}\n","<div class=\"container\" *ngIf=\"translationState$ | async as translationState\">\n    <ng-container *ngIf=\"translationState?.filesInfo?.length > 0; else loading\">\n        <mat-accordion\n            *ngFor=\"let translationGroup of translationState.filesInfo; trackBy: trackedByFilesInfo\"\n            class=\"example-headers-align\"\n        >\n            <mat-expansion-panel [expanded]=\"true\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{ translationGroup.baseKey }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Translation Key</th>\n                            <th *ngFor=\"let translationFile of translationGroup.files; trackBy: trackedByFile\">\n                                {{ translationFile }}\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container\n                            *ngFor=\"\n                                let translateKey of translationState.keys[translationGroup.baseKey] | keyvalue;\n                                trackBy: trackedByKey\n                            \"\n                        >\n                            <tr>\n                                <th>{{ translateKey.key }}</th>\n                                <td *ngFor=\"let translationFile of translationGroup.files; trackBy: trackedByFile\">\n                                    <mat-form-field>\n                                        <input\n                                            matInput\n                                            type=\"text\"\n                                            [value]=\"translateKey.value[translationFile]\"\n                                            (keyup)=\"\n                                                onTranslateChange(\n                                                    translationGroup.baseKey,\n                                                    translateKey.key,\n                                                    translationFile,\n                                                    $event.target.value\n                                                )\n                                            \"\n                                        />\n                                    </mat-form-field>\n                                </td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-container>\n    <ng-template #loading>\n        <div class=\"message\">Loading...</div>\n    </ng-template>\n</div>\n","import { Component } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { SaveTranslationState } from '../store/translation.actions';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n    constructor(private store: Store) {}\n\n    save(): void {\n        this.store.dispatch(new SaveTranslationState());\n    }\n}\n","<mat-toolbar>\n    <span>ngx-translate-assistant</span>\n    <div class=\"spacer\"></div>\n    <button mat-icon-button color=\"primary\" aria-label=\"Save translation state\" (click)=\"save()\">\n        <mat-icon>save</mat-icon>\n    </button>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n    declarations: [HeaderComponent],\n    imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule],\n    exports: [HeaderComponent],\n})\nexport class HeaderModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\n\nimport { TranslationState } from './translation.state';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        NgxsModule.forRoot([TranslationState]),\n        NgxsReduxDevtoolsPluginModule.forRoot(),\n    ],\n})\nexport class StoreModule {}\n","export class LoadTranslationState {\n    static readonly type = '[Translation] load state';\n}\n\nexport class ChangeTranslateKey {\n    static readonly type = '[Translation] change key';\n    constructor(public baseKey: string, public key: string, public file: string, public newValue: string) {}\n}\n\nexport class SaveTranslationState {\n    static readonly type = '[Translation] save state';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { State, Action, StateContext, NgxsOnInit } from '@ngxs/store';\nimport { produce } from 'immer';\nimport { first } from 'rxjs/operators';\n\nimport { ChangeTranslateKey, LoadTranslationState, SaveTranslationState } from './translation.actions';\n\nexport interface TranslationFilesInfo {\n    baseKey: string;\n    files: string[];\n}\n\nexport interface TranslationStateModel {\n    filesInfo: TranslationFilesInfo[];\n    keys: {\n        [baseKey: string]: {\n            [key: string]: {\n                [lang: string]: string;\n            };\n        };\n    };\n}\n\n@State<TranslationStateModel>({\n    name: 'translation',\n    defaults: {\n        filesInfo: [],\n        keys: {},\n    },\n})\n@Injectable()\nexport class TranslationState implements NgxsOnInit {\n    constructor(private http: HttpClient) {}\n\n    ngxsOnInit(ctx: StateContext<TranslationStateModel>): void {\n        ctx.dispatch(new LoadTranslationState());\n    }\n\n    @Action(LoadTranslationState)\n    onLoadTranslationState(ctx: StateContext<TranslationStateModel>): void {\n        this.http.get<TranslationStateModel>('/api/translation-state').pipe(first()).subscribe(ctx.setState);\n    }\n\n    @Action(ChangeTranslateKey)\n    onChangeTranslateKey(ctx: StateContext<TranslationStateModel>, action: ChangeTranslateKey): void {\n        ctx.setState(\n            produce(ctx.getState(), (draft) => {\n                draft.keys[action.baseKey][action.key][action.file] = action.newValue;\n            })\n        );\n    }\n\n    @Action(SaveTranslationState)\n    onSaveTranslationState(ctx: StateContext<TranslationStateModel>): void {\n        this.http.put('/api/translation-state', ctx.getState()).pipe(first()).subscribe();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}